{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React Js\\\\Project1\\\\macronewts\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null\n  });\n\n  // Check for token in local storage so web can use the data immediately\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      dispatch({\n        type: 'LOGIN',\n        payload: user\n      });\n    }\n  }, []);\n  console.log('AuthContext state:', state);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"vE2sE+TkQbu1ImmH6I3bWKsTcYs=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","user","payload","AuthContextProvider","children","_s","dispatch","JSON","parse","localStorage","getItem","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Coding/React Js/Project1/macronewts/frontend/src/context/AuthContext.js"],"sourcesContent":["import {createContext, useReducer, useEffect} from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nexport const authReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {user: action.payload}\r\n        case 'LOGOUT':\r\n            return {user: null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(authReducer, {\r\n        user: null\r\n    })\r\n\r\n    // Check for token in local storage so web can use the data immediately\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            dispatch({type: 'LOGIN', payload: user})\r\n        }\r\n    }, [])\r\n\r\n    console.log('AuthContext state:', state)\r\n\r\n    return (\r\n        <AuthContext.Provider value={{...state, dispatch}}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,OAAO;MACR,OAAO;QAACC,IAAI,EAAEF,MAAM,CAACG;MAAO,CAAC;IACjC,KAAK,QAAQ;MACT,OAAO;QAACD,IAAI,EAAE;MAAI,CAAC;IACvB;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMK,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGd,UAAU,CAACK,WAAW,EAAE;IAC9CI,IAAI,EAAE;EACV,CAAC,CAAC;;EAEF;EACAR,SAAS,CAAC,MAAM;IACZ,MAAMQ,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAIT,IAAI,EAAE;MACNK,QAAQ,CAAC;QAACN,IAAI,EAAE,OAAO;QAAEE,OAAO,EAAED;MAAI,CAAC,CAAC;IAC5C;EACJ,CAAC,EAAE,EAAE,CAAC;EAENU,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEd,KAAK,CAAC;EAExC,oBACIH,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAC,GAAGhB,KAAK;MAAEQ;IAAQ,CAAE;IAAAF,QAAA,EAC5CA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE/B,CAAC;AAAAb,EAAA,CApBYF,mBAAmB;AAAAgB,EAAA,GAAnBhB,mBAAmB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}